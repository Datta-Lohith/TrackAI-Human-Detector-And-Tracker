##############################################################################
#
# GitGub CI workflow syntax spec:
#    https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions
#
# CodeCov github action setup:
#    https://github.com/codecov/codecov-action
#
# CodeCov badge setup:
#    https://docs.codecov.com/docs/status-badges
#
# version 1.1
##############################################################################

name: Build

on:
  # Triggered whenever push to main
  push:
    branches: [ "main" ]

  # Triggered whenever a pull request is created on main
  pull_request:
    branches: [ "main" ]
    types: [opened]

  # Allow manual trigger
  workflow_dispatch:

jobs:
  build-run-upload:
    # Create a container of the latest Ubuntu, other values could be
    # ubuntu-latest, ubuntu-22.04, etc.
    runs-on: ubuntu-22.04

    steps:
      # We want to use GitHub CI checkout version 3 to check out our branch
      - uses: actions/checkout@v3

      - name: Install OpenCV
        run: |
          # For opencv
          git clone https://github.com/opencv/opencv.git
          cd opencv 
          git checkout 4.10.0
          cd ..
          git clone https://github.com/opencv/opencv_contrib.git
          cd opencv_contrib
          git checkout 4.10.0
          cd ..
          cd opencv
          mkdir build
          cd build
          cmake -D CMAKE_BUILD_TYPE=RELEASE \
                  -D BUILD_EXAMPLES=OFF \
                  -D BUILD_opencv_apps=OFF \
                  -D CMAKE_CXX_STANDARD=14 \
                  -D CMAKE_CXX_FLAGS="-std=c++14" \
                  -D OPENCV_EXTRA_MODULES_PATH=../../opencv_contrib/modules \
                  -D BUILD_DOCS=OFF \
                  -D BUILD_PERF_TESTS=OFF \
                  -D BUILD_TESTS=OFF \
                  -D WITH_CUDA=OFF \
                  -D CMAKE_INSTALL_PREFIX=/usr/local ..
                  
          make 
          sudo make install
          sudo sh -c 'echo "/usr/local/lib" >> /etc/ld.so.conf.d/opencv.conf'
          sudo ldconfig
        
      - name: Install Eigen
        run: |
          sudo apt install libeigen3-dev

      # Install some system pacakges
      - name: Install build packages
        run: |
          sudo apt update
          sudo apt install -y software-properties-common
          sudo apt install -y doxygen lcov gcovr

      # Build, run unit test, and generate coverage report
      - name: Configure CMake flags and build exectables
        run: |
          cmake -D WANT_COVERAGE=ON -D CMAKE_BUILD_TYPE=Debug -S ./ -B build/
          cmake --build build/ --clean-first --target all test_coverage
          cat build/test_coverage.info

      # Upload coverage result to CodeCov
      - name: Upload coverage result to CodeCov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # required (must add token in your github repo)
          files: ${{github.workspace}}/build/test_coverage.info
          fail_ci_if_error: true # optional (default = false)
          verbose: true # optional (default = false)
          disable_search: true # optional (default = false)
          plugin: none         # optional (xcode, gcov, pycoverage)
